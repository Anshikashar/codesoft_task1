import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
#Analysis of dataset
df=pd.read_csv("titanic.csv")
print(df)
df.head()
df.describe()
df.shape
df.info()
df.isnull()
df.isnull().sum()
sns.heatmap(df.isnull())
df.drop(columns=['Cabin'],axis=1)
df['Embarked'].fillna(df['Embarked'].mode()[0],inplace=True)
df['Age'].fillna(df['Age'].mean(),inplace=True)
sns.heatmap(df.isnull())

#training and testing
X = df.drop('Survived', axis=1) 
y = df['Survived']
X = pd.get_dummies(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print("Accuracy:", accuracy)
print("Confusion Matrix:\n", conf_matrix)
print("Classification Report:\n", class_report)

#prediction
predicted_survival = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(predicted_survival)
